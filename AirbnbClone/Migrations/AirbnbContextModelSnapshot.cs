// <auto-generated />
using System;
using AirbnbClone.Models.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirbnbClone.Migrations
{
    [DbContext(typeof(AirbnbContext))]
    partial class AirbnbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Host", b =>
                {
                    b.Property<int>("HostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostId"));

                    b.Property<string>("About")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("about");

                    b.Property<long?>("CreateAt")
                        .HasColumnType("bigint")
                        .HasColumnName("createAt");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullname");

                    b.Property<bool?>("IsSuperhost")
                        .HasColumnType("bit")
                        .HasColumnName("isSuperhost");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("location");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pictureUrl");

                    b.Property<int?>("PolicyNumber")
                        .HasColumnType("int")
                        .HasColumnName("policyNumber");

                    b.Property<string>("ResponseTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("responseTime");

                    b.HasKey("HostId")
                        .HasName("PK__Host__A397C7AEE232B358");

                    b.ToTable("Host");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListingId"));

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("int")
                        .HasColumnName("bathrooms");

                    b.Property<int?>("Bedrooms")
                        .HasColumnType("int")
                        .HasColumnName("bedrooms");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<int?>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    b.Property<string>("LikedByUsers")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("likedbyusers");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<string>("RoomType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("roomType");

                    b.Property<decimal?>("StatAccuracy")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statAccuracy");

                    b.Property<decimal?>("StatCheckIn")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statCheckIn");

                    b.Property<decimal?>("StatCleanliness")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statCleanliness");

                    b.Property<decimal?>("StatCommunication")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statCommunication");

                    b.Property<decimal?>("StatLocation")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statLocation");

                    b.Property<decimal?>("StatValue")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("statValue");

                    b.Property<string>("Summary")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("summary");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type");

                    b.HasKey("ListingId")
                        .HasName("PK__Listing__89D817742A5ED1B7");

                    b.HasIndex("HostId");

                    b.HasIndex("LocationId");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingAmenity", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<string>("Amenity")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("amenity");

                    b.HasKey("ListingId", "Amenity")
                        .HasName("PK__ListingA__F2B0D0F1CF9269A4");

                    b.ToTable("ListingAmenities");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingFilter", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<int?>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    b.Property<bool?>("IsPetAllowed")
                        .HasColumnType("bit")
                        .HasColumnName("isPetAllowed");

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("label");

                    b.Property<int?>("LikeByUser")
                        .HasColumnType("int")
                        .HasColumnName("likeByUser");

                    b.Property<string>("Place")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("place");

                    b.HasKey("ListingId")
                        .HasName("PK__ListingF__89D81774CF6A2297");

                    b.HasIndex("HostId");

                    b.ToTable("ListingFilter");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingImgUrl", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imgUrl");

                    b.HasKey("ListingId", "ImgUrl")
                        .HasName("PK__ListingI__AF217F5416DBF50A");

                    b.ToTable("ListingImgUrls");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingLabel", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("label");

                    b.HasKey("ListingId", "Label")
                        .HasName("PK__ListingL__AD5A28AFBE899D07");

                    b.ToTable("ListingLabels");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("countryCode");

                    b.Property<decimal?>("Lan")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("lan");

                    b.Property<decimal?>("Lat")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("lat");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__771831EAB1B20E67");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Order", b =>
                {
                    b.Property<int?>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("_id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuestAdult")
                        .HasColumnType("int");

                    b.Property<int?>("Guestchildren")
                        .HasColumnType("int");

                    b.Property<int?>("Guestinfant")
                        .HasColumnType("int");

                    b.Property<int?>("Guestpets")
                        .HasColumnType("int");

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StayId")
                        .HasColumnType("int");

                    b.Property<string>("StayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<long?>("At")
                        .HasColumnType("bigint")
                        .HasColumnName("at");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reviewerName");

                    b.Property<int?>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int")
                        .HasColumnName("reviewer_id");

                    b.Property<string>("Txt")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("txt");

                    b.Property<string>("UserImg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rimgUrl");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__60883D90C73E7D5E");

                    b.HasIndex("ListingId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.User", b =>
                {
                    b.Property<int?>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("_id"));

                    b.Property<string>("Fullname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fullname");

                    b.Property<int?>("HostMsg")
                        .HasColumnType("int")
                        .HasColumnName("hostMsg");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imgUrl");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("UserMsg")
                        .HasColumnType("int")
                        .HasColumnName("userMsg");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("_id")
                        .HasName("PK__Users__3213E83FC7291D1E");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ListingLikedByUser", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ListingId", "UserId")
                        .HasName("PK__ListingL__6243F404862A6FE6");

                    b.HasIndex("UserId");

                    b.ToTable("ListingLikedByUsers", (string)null);
                });

            modelBuilder.Entity("ListingUser", b =>
                {
                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ListingId", "UserId");

                    b.ToTable("ListingUser");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Listing", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Host", "Host")
                        .WithMany("Listings")
                        .HasForeignKey("HostId")
                        .HasConstraintName("FK__Listing__host_id__44FF419A");

                    b.HasOne("AirbnbClone.Models.DataLayer.Location", "Location")
                        .WithMany("Listings")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__Listing__locatio__45F365D3");

                    b.Navigation("Host");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingAmenity", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", "Listing")
                        .WithMany("ListingAmenities")
                        .HasForeignKey("ListingId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingAm__listi__534D60F1");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingFilter", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Host", "Host")
                        .WithMany("ListingFilters")
                        .HasForeignKey("HostId")
                        .HasConstraintName("FK__ListingFi__host___49C3F6B7");

                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", "Listing")
                        .WithOne("ListingFilter")
                        .HasForeignKey("AirbnbClone.Models.DataLayer.ListingFilter", "ListingId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingFi__listi__48CFD27E");

                    b.Navigation("Host");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingImgUrl", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", "Listing")
                        .WithMany("ListingImgUrls")
                        .HasForeignKey("ListingId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingIm__listi__5070F446");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.ListingLabel", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", "Listing")
                        .WithMany("ListingLabels")
                        .HasForeignKey("ListingId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingLa__listi__5629CD9C");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Review", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", "Listing")
                        .WithMany("Reviews")
                        .HasForeignKey("ListingId")
                        .HasConstraintName("FK__Review__listing___4CA06362");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("ListingLikedByUser", b =>
                {
                    b.HasOne("AirbnbClone.Models.DataLayer.Listing", null)
                        .WithMany()
                        .HasForeignKey("ListingId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingLi__listi__59063A47");

                    b.HasOne("AirbnbClone.Models.DataLayer.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ListingLi__user___59FA5E80");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Host", b =>
                {
                    b.Navigation("ListingFilters");

                    b.Navigation("Listings");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Listing", b =>
                {
                    b.Navigation("ListingAmenities");

                    b.Navigation("ListingFilter");

                    b.Navigation("ListingImgUrls");

                    b.Navigation("ListingLabels");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("AirbnbClone.Models.DataLayer.Location", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
